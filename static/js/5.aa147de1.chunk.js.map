{"version":3,"sources":["libs/constants.ts","libs/index.ts","components/Header/index.tsx","layouts/MainLayout.tsx","components/Input/SearchInput/index.tsx","components/MyBookMarkNSearch/index.tsx","components/Modal/SearchModal/index.tsx","components/Item/IssueListItem/index.tsx","pages/Home.tsx"],"names":["navTitle","DEFAULT_PERPAGE","DEFAULT_PAGE","StyledPageHeader","styled","PageHeader","props","isMain","Header","handleMoveBack","handleMoveHome","pathName","onBack","title","extra","className","onClick","HomeOutlined","StyledMainLayout","div","MainLayout","children","history","useHistory","location","pathname","split","goBack","push","ROUTE_ROOT","Content","StyledSearchInput","Input","theme","mainColor","SearchInput","inputMode","handleModalToggle","rest","placeholder","addonAfter","SearchOutlined","allowClear","readOnly","size","StyledMyBookMarkNSearch","isBookMark","MyBookMarkNSearch","handleRemoveAll","handleRemove","handleMoveSearchOnClick","itemList","length","alert","map","item","full_name","closable","onClose","id","color","StyledSearchModal","Modal","SearchModal","modalToggle","recentlySearch","onFinish","Form","useForm","form","useEffect","resetFields","Item","name","noStyle","visible","onCancel","width","footer","StyledListItem","List","IssueListItem","html_url","avatar_url","updated_at","body","reactions","repository_url","IconText","icon","count","reactionsArray","confused","key","eyes","heart","hooray","laugh","rocket","actions","reaction","Meta","avatar","src","href","description","date","updatedAt","Date","setHours","getHours","toISOString","replace","substring","timeStamp","StyledHome","Home","useSelector","state","githubState","bookMarkList","issueList","isLoading","useState","setModalToggle","issueLoading","setIssueLoading","undefined","issues","setIssues","issueCount","setIssueCount","bookMark","localStorage","getItem","dispatch","useDispatch","useCallback","prev","resetAboutIssue","resetIssueListAction","data","search","getRepositoryAction","request","q","per_page","page","addRecentlySearchAction","uuidv4","window","confirm","resetBookMarkAction","resetRecentlySearchAction","num","removeBookMarkAction","string","removeRecentlySearchAction","handleLoadMoreData","slice","setLoadingAction","getIssueAction","JSON","parse","tip","style","height","overflow","padding","dataLength","next","hasMore","loader","paragraph","rows","active","endMessage","plain","scrollableTarget","dataSource","itemLayout","renderItem","user","imageStyle"],"mappings":"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","file":"static/js/5.aa147de1.chunk.js","sourcesContent":["export const navTitle: { [key: string]: string } = {\n  ['search']: '검색 결과'\n};\n\nexport const DEFAULT_PERPAGE = 10;\nexport const DEFAULT_PAGE = 1;\n","export * from './constants';\n","import React from 'react';\n\nimport { PageHeader } from 'antd';\nimport styled from 'styled-components';\nimport { HomeOutlined } from '@ant-design/icons';\n\nimport { navTitle } from 'libs';\n\ninterface HeaderProps {\n  handleMoveBack: () => void;\n  handleMoveHome: () => void;\n  pathName: string;\n  isMain?: boolean;\n}\n\ninterface StyledPageHeaderProps {\n  isMain?: boolean;\n}\nconst StyledPageHeader = styled(PageHeader)<StyledPageHeaderProps>`\n  position: sticky;\n  top: 0;\n  left: 0;\n  right: 0;\n\n  .menu-button {\n    all: unset;\n    cursor: pointer;\n  }\n\n  .menu-icon,\n  .anticon.anticon-arrow-left,\n  .ant-page-header-heading-title {\n    font-size: 30px;\n  }\n  .ant-page-header-back-button {\n    display: ${props => (props.isMain ? 'none' : 'block')} !important;\n  }\n`;\n\nconst Header = (props: HeaderProps) => {\n  const { handleMoveBack, handleMoveHome, pathName, isMain } = props;\n\n  return (\n    <StyledPageHeader\n      onBack={handleMoveBack}\n      isMain={isMain}\n      title={isMain ? '' : navTitle[pathName]}\n      extra={[\n        <button key=\"menu\" className=\"menu-button\" onClick={handleMoveHome}>\n          <HomeOutlined className=\"menu-icon\" />\n        </button>\n      ]}\n    ></StyledPageHeader>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useHistory } from 'react-router';\n\nimport { Layout } from 'antd';\nimport styled from 'styled-components';\n\nimport Header from 'components/Header';\nimport { ROUTE_ROOT } from 'routes/const';\n\ninterface MainLayoutProps extends React.HTMLProps<HTMLDivElement> {\n  isMain?: boolean;\n}\n\nconst StyledMainLayout = styled.div`\n  position: relative;\n\n  .ant-page-header-content {\n    padding: 0;\n  }\n`;\n\nconst MainLayout = ({ children, ...props }: MainLayoutProps) => {\n  const { isMain } = props;\n  const history = useHistory();\n  const pathName = history.location.pathname.split('/')[1];\n\n  const handleMoveBack = () => {\n    history.goBack();\n  };\n\n  const handleMoveHome = () => {\n    history.push(ROUTE_ROOT);\n  };\n\n  return (\n    <StyledMainLayout>\n      <Header\n        isMain={isMain}\n        handleMoveBack={handleMoveBack}\n        handleMoveHome={handleMoveHome}\n        pathName={pathName}\n      ></Header>\n      <Layout.Content>{children}</Layout.Content>\n    </StyledMainLayout>\n  );\n};\n\nexport default MainLayout;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { Input } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\n\ninterface SearchInputProps {\n  inputMode?: boolean;\n  handleModalToggle: () => void;\n}\nconst StyledSearchInput = styled(Input)`\n  width: 90%;\n  input {\n    font-size: 28px;\n    font-family: GmarketSansMedium;\n  }\n\n  .ant-btn.ant-btn-primary.ant-btn-lg.ant-input-search-button {\n    height: 58px;\n  }\n\n  .anticon.anticon-close-circle.ant-input-clear-icon,\n  .anticon.anticon-search {\n    font-size: 24px;\n  }\n\n  .ant-input-group-addon {\n    background-color: ${props => props.theme.mainColor};\n    color: #fff;\n  }\n`;\n\nconst SearchInput = (props: SearchInputProps) => {\n  const { inputMode, handleModalToggle, ...rest } = props;\n\n  return (\n    <StyledSearchInput\n      {...rest}\n      placeholder=\"검색어를 입력해주세요.\"\n      addonAfter={\n        <button onClick={() => !inputMode && handleModalToggle()}>\n          <SearchOutlined />\n        </button>\n      }\n      allowClear\n      readOnly={!inputMode}\n      onClick={() => !inputMode && handleModalToggle()}\n      size=\"large\"\n    />\n  );\n};\n\nexport default SearchInput;\n","import React from 'react';\n\nimport { Tag } from 'antd';\nimport styled from 'styled-components';\n\nimport { addRecentlySearch, bookMarkList } from 'module/github';\n\ninterface MyBookMarkNSearchProps {\n  handleMoveSearchOnClick?: (search: string) => void;\n  handleRemoveAll: (isBookMark?: boolean) => void;\n  handleRemove: (id: number | string, isBookMark?: boolean) => void;\n  itemList?: bookMarkList[] | addRecentlySearch[];\n  isBookMark?: boolean;\n}\n\nconst StyledMyBookMarkNSearch = styled.div<{ isBookMark?: boolean }>`\n  width: 100%;\n  border-bottom: ${props => (props.isBookMark ? '1px solid #c8c8c8' : 'none')};\n  header.bookmark {\n    display: flex;\n    justify-content: space-between;\n    padding: 20px 40px;\n  }\n  p.title,\n  .remove-all {\n    font-family: GmarketSansMedium;\n    font-size: 24px;\n  }\n\n  .remove-all {\n    cursor: pointer;\n    color: ${props => props.theme.mainColor};\n  }\n\n  section.tags-section {\n    padding: 0 40px 20px 40px;\n  }\n\n  .tags {\n    cursor: pointer;\n    padding: 10px;\n    margin-bottom: 10px;\n    font-size: 20px;\n    font-family: GmarketSansLight;\n  }\n\n  .anticon.anticon-close.ant-tag-close-icon {\n    font-size: 20px;\n  }\n\n  div.empty-tags {\n    margin-bottom: 30px;\n    text-align: center;\n    font-size: 20px;\n    font-family: GmarketSansMedium;\n  }\n`;\n\nconst MyBookMarkNSearch = (props: MyBookMarkNSearchProps) => {\n  const {\n    handleRemoveAll,\n    handleRemove,\n    handleMoveSearchOnClick,\n    itemList,\n    isBookMark\n  } = props;\n  return (\n    <StyledMyBookMarkNSearch isBookMark>\n      <header className=\"bookmark\">\n        <p className=\"title\">{isBookMark ? '나의 북마크' : '최근 검색어'}</p>\n        <button\n          className=\"remove-all\"\n          onClick={() =>\n            itemList?.length\n              ? handleRemoveAll(isBookMark)\n              : alert('저장 된 정보가 없습니다.')\n          }\n        >\n          전체 삭제\n        </button>\n      </header>\n      <section className=\"tags-section\">\n        {itemList?.length ? (\n          itemList.map(item => (\n            <Tag\n              key={item.id}\n              onClick={() =>\n                !isBookMark &&\n                handleMoveSearchOnClick &&\n                handleMoveSearchOnClick(item.full_name)\n              }\n              closable\n              onClose={() => handleRemove(item.id, isBookMark)}\n              color=\"success\"\n              className=\"tags\"\n            >\n              {item.full_name}\n            </Tag>\n          ))\n        ) : (\n          <div className=\"empty-tags\">\n            {isBookMark\n              ? '저장된 북마크가 없습니다.'\n              : '최근 검색어가 없습니다.'}\n          </div>\n        )}\n      </section>\n    </StyledMyBookMarkNSearch>\n  );\n};\n\nexport default MyBookMarkNSearch;\n","import React, { useEffect } from 'react';\n\nimport { Modal, Form } from 'antd';\nimport styled from 'styled-components';\n\nimport SearchInput from 'components/Input/SearchInput';\nimport MyBookMarkNSearch from 'components/MyBookMarkNSearch';\nimport { addRecentlySearch } from 'module/github';\n\ninterface SearchModalProps {\n  modalToggle: boolean;\n  recentlySearch?: addRecentlySearch[];\n  handleModalToggle: () => void;\n  onFinish: (data: { search: string }) => void;\n  handleRemoveAll: (isBookMark?: boolean) => void;\n  handleRemove: (id: number | string, isBookMark?: boolean) => void;\n  handleMoveSearchOnClick: (search: string) => void;\n}\n\nconst StyledSearchModal = styled(Modal)`\n  margin: 0 auto;\n  top: none !important;\n  bottom: 0 !important;\n  padding: 0;\n  height: calc(100vh - 100px);\n  .ant-modal-close-x {\n    height: 91px;\n    line-height: 91px;\n    font-size: 28px;\n  }\n  .ant-modal-content {\n    height: calc(100vh - 100px);\n  }\n`;\nconst SearchModal = (props: SearchModalProps) => {\n  const {\n    modalToggle,\n    recentlySearch,\n    handleModalToggle,\n    onFinish,\n    handleRemoveAll,\n    handleRemove,\n    handleMoveSearchOnClick\n  } = props;\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    return () => {\n      form.resetFields();\n    };\n  }, [modalToggle]);\n\n  return (\n    <StyledSearchModal\n      title={\n        <Form form={form} onFinish={onFinish}>\n          <Form.Item name=\"search\" noStyle>\n            <SearchInput inputMode handleModalToggle={handleModalToggle} />\n          </Form.Item>\n        </Form>\n      }\n      visible={modalToggle}\n      onCancel={handleModalToggle}\n      width={750}\n      footer={null}\n    >\n      <MyBookMarkNSearch\n        itemList={recentlySearch}\n        handleRemoveAll={handleRemoveAll}\n        handleRemove={handleRemove}\n        handleMoveSearchOnClick={handleMoveSearchOnClick}\n      />\n    </StyledSearchModal>\n  );\n};\n\nexport default SearchModal;\n","import React from 'react';\n\nimport { Avatar, List, Space, Tag } from 'antd';\nimport styled from 'styled-components';\n\ninterface ListItemProps {\n  html_url: string;\n  title: string | null;\n  avatar_url: string;\n  updated_at: string;\n  body: string;\n  reactions: {\n    laugh: number;\n    hooray: number;\n    confused: number;\n    heart: number;\n    rocket: number;\n    eyes: number;\n  };\n  repository_url: string;\n}\n\nconst StyledListItem = styled(List.Item)`\n  font-size: 24px;\n  font-family: GmarketSansLight;\n  padding: 20px;\n  .tags {\n    padding: 5px;\n    font-family: GmarketSansLight;\n  }\n\n  .ant-anchor-link-title {\n    font-size: 24px;\n    font-family: GmarketSansLight;\n  }\n  a.anchor {\n    color: #000;\n  }\n\n  section.description {\n    margin: 10px 0;\n    font-size: 19px;\n  }\n\n  p.updated {\n    font-size: 14px;\n  }\n\n  .footer-container {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .ant-list-item-meta-description {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    word-wrap: break-word;\n    line-height: 1.2em;\n    height: 3.6em;\n  }\n`;\nconst IssueListItem = (props: ListItemProps) => {\n  const {\n    html_url,\n    title,\n    avatar_url,\n    updated_at,\n    body,\n    reactions,\n    repository_url\n  } = props;\n\n  const IconText = ({ icon, count }: { icon: string; count: number }) => (\n    <Space>\n      {icon}\n      {count}\n    </Space>\n  );\n\n  const timeStamp = (date: string) => {\n    const updatedAt = new Date(date);\n    updatedAt.setHours(updatedAt.getHours() + 9);\n    return updatedAt.toISOString().replace('T', ' ').substring(0, 19);\n  };\n\n  const filterRepo = () => {\n    return repository_url.split('https://api.github.com/repos/')[1];\n  };\n  const reactionsArray = [\n    {\n      count: reactions.confused,\n      icon: '😕',\n      key: 'confused'\n    },\n    {\n      count: reactions.eyes,\n      icon: '👀',\n      key: 'eyes'\n    },\n    {\n      count: reactions.heart,\n      icon: '❤',\n      key: 'heart'\n    },\n    {\n      count: reactions.hooray,\n      icon: '🎉',\n      key: 'hooray'\n    },\n    {\n      count: reactions.laugh,\n      icon: '🤣',\n      key: 'laugh'\n    },\n    {\n      count: reactions.rocket,\n      icon: '🚀',\n      key: 'rocket'\n    }\n  ];\n  return (\n    <StyledListItem\n      actions={reactionsArray.map(reaction => (\n        <IconText\n          icon={reaction.icon}\n          count={reaction.count}\n          key={reaction.key}\n        />\n      ))}\n    >\n      <List.Item.Meta\n        avatar={<Avatar src={avatar_url && avatar_url} />}\n        title={<a href={html_url}>{title}</a>}\n        description={body}\n      />\n\n      <div className=\"footer-container\">\n        <Tag key=\"repo\" color=\"success\" className=\"tags\">\n          {filterRepo()}\n        </Tag>\n        <p className=\"updated\">Updated {timeStamp(updated_at)}</p>\n      </div>\n    </StyledListItem>\n  );\n};\n\nexport default IssueListItem;\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Divider, Empty, List, Skeleton, Spin } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport SearchInput from 'components/Input/SearchInput';\nimport MainLayout from 'layouts/MainLayout';\nimport SearchModal from 'components/Modal/SearchModal';\nimport {\n  addRecentlySearchAction,\n  getIssueAction,\n  getRepositoryAction,\n  listIssueReposResponse,\n  removeBookMarkAction,\n  removeRecentlySearchAction,\n  resetBookMarkAction,\n  resetIssueListAction,\n  resetRecentlySearchAction,\n  setLoadingAction\n} from 'module/github';\nimport { DEFAULT_PAGE, DEFAULT_PERPAGE } from 'libs';\nimport MyBookMarkNSearch from 'components/MyBookMarkNSearch';\nimport { StoreState } from 'module/index';\nimport { useEffect } from 'react';\nimport IssueListItem from 'components/Item/IssueListItem';\n\nconst StyledHome = styled.div`\n  position: relative;\n  .spin {\n    position: absolute;\n\n    top: 500px;\n    left: 50%;\n    right: 50%;\n    background: #000000;\n  }\n  .search-input-wrap {\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nconst Home = () => {\n  const { bookMarkList, recentlySearch, issueList, isLoading } = useSelector(\n    (state: StoreState) => state.githubState\n  );\n  const [modalToggle, setModalToggle] = useState<boolean>(false);\n  const [issueLoading, setIssueLoading] = useState<boolean>(false);\n  const [issues, setIssues] = useState<\n    undefined | listIssueReposResponse['data'][]\n  >(undefined);\n  const [issueCount, setIssueCount] = useState<number>(20);\n\n  const bookMark = localStorage.getItem('bookMark');\n  const dispatch = useDispatch();\n  const issueSupply = 20;\n\n  const handleModalToggle = useCallback(() => {\n    setModalToggle(prev => !prev);\n  }, [modalToggle]);\n\n  const resetAboutIssue = () => {\n    setIssues(undefined);\n    setIssueCount(20);\n    dispatch(resetIssueListAction());\n  };\n  const onFinish = useCallback(\n    (data: { search: string }) => {\n      if (data.search) {\n        dispatch(\n          getRepositoryAction.request({\n            q: data.search,\n            per_page: DEFAULT_PERPAGE,\n            page: DEFAULT_PAGE\n          })\n        );\n        dispatch(\n          addRecentlySearchAction.request({\n            id: uuidv4(),\n            full_name: data.search\n          })\n        );\n        resetAboutIssue();\n        handleModalToggle();\n      } else {\n        alert('검색어를 입력해주세요!');\n      }\n    },\n    [dispatch]\n  );\n\n  const handleMoveSearchOnClick = (search: string) => {\n    dispatch(\n      getRepositoryAction.request({\n        q: search,\n        per_page: DEFAULT_PERPAGE,\n        page: DEFAULT_PAGE\n      })\n    );\n    resetAboutIssue();\n  };\n\n  const handleRemoveAll = useCallback(\n    (isBookMark?: boolean) => {\n      const confirm = window.confirm(\n        isBookMark\n          ? '저장된 북마크가 모두 제거됩니다.\\n진행 하시겠습니까?'\n          : '저장된 최근 검색어가 모두 제거됩니다.\\n진행 하시겠습니까?'\n      );\n      if (confirm) {\n        if (isBookMark) {\n          resetAboutIssue();\n          dispatch(resetBookMarkAction());\n        } else {\n          dispatch(resetRecentlySearchAction());\n        }\n      } else return;\n    },\n    [bookMarkList, recentlySearch]\n  );\n\n  const handleRemove = useCallback(\n    (id: number | string, isBookMark?: boolean) => {\n      if (isBookMark) {\n        const num = id as number;\n        resetAboutIssue();\n        dispatch(removeBookMarkAction.request({ id: num }));\n      } else {\n        const string = id as string;\n        dispatch(removeRecentlySearchAction.request({ id: string }));\n      }\n    },\n    [bookMarkList, recentlySearch]\n  );\n\n  const getIssue = () => {\n    if (bookMark) {\n      dispatch(setLoadingAction());\n      dispatch(getIssueAction.request(JSON.parse(bookMark)));\n    } else {\n      return;\n    }\n  };\n\n  const handleLoadMoreData = () => {\n    if (issueLoading) return;\n    setIssueLoading(true);\n    setIssues(issueList?.slice(0, issueCount));\n    setIssueCount(prev => prev + issueSupply);\n    setIssueLoading(false);\n  };\n\n  const issueListInit = () => {\n    if (issueList && issueCount === 20) {\n      setIssues(issueList.slice(0, issueCount));\n      setIssueCount(prev => prev + issueSupply);\n    }\n  };\n\n  useEffect(() => {\n    getIssue();\n  }, [bookMarkList]);\n\n  useEffect(() => {\n    issueListInit();\n  }, [issueList, isLoading, issueCount]);\n\n  useEffect(() => {\n    if (issues) handleLoadMoreData();\n\n    return () => resetAboutIssue();\n  }, []);\n\n  return (\n    <MainLayout isMain>\n      <StyledHome>\n        {isLoading && <Spin tip=\"loading...\" size=\"large\" className=\"spin\" />}\n        <div className=\"search-input-wrap\">\n          <SearchInput handleModalToggle={handleModalToggle} />\n        </div>\n        <MyBookMarkNSearch\n          handleRemoveAll={handleRemoveAll}\n          handleRemove={handleRemove}\n          itemList={bookMarkList}\n          isBookMark\n        />\n\n        {issues && (\n          <div\n            id=\"scrollableDiv\"\n            style={{\n              height: 'calc(100vh - 400px)',\n              overflow: 'auto',\n              padding: '0 16px'\n            }}\n          >\n            <InfiniteScroll\n              dataLength={issues?.length as number}\n              next={handleLoadMoreData}\n              hasMore={\n                (issues?.length as number) < (issueList?.length as number)\n              }\n              loader={<Skeleton avatar paragraph={{ rows: 1 }} active />}\n              endMessage={<Divider plain>마지막 게시물입니다.</Divider>}\n              scrollableTarget=\"scrollableDiv\"\n            >\n              <List\n                dataSource={issues}\n                itemLayout=\"vertical\"\n                renderItem={(item: any) => (\n                  <IssueListItem\n                    html_url={item.html_url}\n                    title={item.title}\n                    body={item.body}\n                    avatar_url={item.user.avatar_url}\n                    updated_at={item.updated_at}\n                    reactions={item.reactions}\n                    repository_url={item.repository_url}\n                  />\n                )}\n              />\n            </InfiniteScroll>\n          </div>\n        )}\n\n        {!bookMarkList && (\n          <Empty\n            className=\"empty\"\n            description={\n              <div>\n                <p className=\"empty-description\">\n                  저장된 저장소가 없어요!\n                  <br />\n                  관심있는 저장소를 저장하고 이슈를 모아보세요!\n                </p>\n              </div>\n            }\n            imageStyle={{ height: '100%' }}\n          />\n        )}\n      </StyledHome>\n      <SearchModal\n        onFinish={onFinish}\n        modalToggle={modalToggle}\n        handleModalToggle={handleModalToggle}\n        handleRemoveAll={handleRemoveAll}\n        handleRemove={handleRemove}\n        recentlySearch={recentlySearch}\n        handleMoveSearchOnClick={handleMoveSearchOnClick}\n      />\n    </MainLayout>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}