{"version":3,"sources":["libs/index.ts","libs/constants.ts","components/Item/ListItem/index.tsx","components/Header/index.tsx","layouts/MainLayout.tsx","container/Search/index.tsx","pages/search/SearchPage.tsx"],"names":["navTitle","DEFAULT_PERPAGE","DEFAULT_PAGE","addComma","num","toString","replace","StyledListItem","styled","List","Item","ListItem","props","url","bookMarkList","handleAddBookMark","handleRemoveBookMark","issueItems","searchItems","IconText","icon","text","stringIcon","React","createElement","timeStamp","date","updatedAt","Date","setHours","getHours","toISOString","substring","checkBookMark","find","list","id","searchListIconArray","count","forks_count","StarOutlined","key","watchers","EyeOutlined","reactionsArray","reactions","confused","eyes","heart","hooray","laugh","rocket","actions","map","searchIcon","reactionIcon","Meta","avatar","src","owner","avatar_url","user","title","href","html_url","className","full_name","description","body","topics","topic","color","open_issues_count","pushed_at","updated_at","onClick","repo","name","login","repository_url","split","StyledPageHeader","PageHeader","isMain","Header","handleMoveBack","handleMoveHome","pathName","onBack","extra","HomeOutlined","StyledMainLayout","div","MainLayout","children","history","useHistory","location","pathname","goBack","push","ROUTE_ROOT","Content","StyledSearch","theme","mainColor","Search","useSelector","state","githubState","repositoryList","isLoading","useState","currentPage","setCurrentPage","totalPage","Math","ceil","data","total_count","dispatch","useDispatch","keyword","useCallback","addBookMarkAction","request","removeBookMarkAction","useEffect","getRepositoryAction","q","per_page","page","setLoadingAction","style","height","overflow","padding","dataLength","items","length","next","prev","hasMore","loader","paragraph","rows","active","endMessage","plain","scrollableTarget","dataSource","itemLayout","renderItem","item","imageStyle","SearchPage"],"mappings":"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","file":"static/js/6.7417e932.chunk.js","sourcesContent":["export * from './constants';\n","export const navTitle: { [key: string]: string } = {\n  ['search']: '검색 결과'\n};\n\nexport const DEFAULT_PERPAGE = 10;\nexport const DEFAULT_PAGE = 1;\n\nexport const addComma = (num: number) => {\n  if (!num) return num;\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","import React, { FunctionComponent } from 'react';\n\nimport { Avatar, List, Space, Tag } from 'antd';\nimport styled from 'styled-components';\n\nimport { EyeOutlined, HeartFilled, StarOutlined } from '@ant-design/icons';\n\nimport {\n  bookMarkList,\n  handleAddBookMarkProps,\n  issueItems,\n  searchItem\n} from 'module/github';\nimport { addComma } from 'libs';\n\ninterface ListItemProps {\n  issueItems?: issueItems;\n  searchItems?: searchItem;\n  bookMarkList?: bookMarkList[];\n  handleAddBookMark?: (props: handleAddBookMarkProps) => void;\n  handleRemoveBookMark?: (id: number) => void;\n}\n\ninterface IconProps {\n  icon?: FunctionComponent;\n  stringIcon?: string;\n  text: string | number;\n}\nconst StyledListItem = styled(List.Item)`\n  font-size: 24px;\n  font-family: GmarketSansLight;\n  padding: 40px 20px;\n\n  .ant-anchor-link-title {\n    font-size: 24px;\n    font-family: GmarketSansLight;\n  }\n  a.anchor {\n    color: #000;\n  }\n\n  p.issue {\n    margin-top: 15px;\n    font-size: 20px;\n  }\n\n  .add-button {\n    font-size: 22px;\n    cursor: pointer;\n  }\n\n  .anticon.anticon-heart.active {\n    color: #ff0000;\n  }\n`;\nconst ListItem = (props: ListItemProps) => {\n  const {\n    bookMarkList,\n    handleAddBookMark,\n    handleRemoveBookMark,\n    issueItems,\n    searchItems\n  } = props;\n\n  const IconText = ({ icon, text, stringIcon }: IconProps) => (\n    <Space>\n      {icon ? React.createElement(icon) : stringIcon}\n\n      {text}\n    </Space>\n  );\n  const timeStamp = (date: string) => {\n    const updatedAt = new Date(date);\n    updatedAt.setHours(updatedAt.getHours() + 9);\n    return updatedAt.toISOString().replace('T', ' ').substring(0, 19);\n  };\n\n  const filterRepo = (url: string) => {\n    return url?.split('https://api.github.com/repos/')[1];\n  };\n\n  const checkBookMark = () => {\n    return bookMarkList?.find(list => list.id === searchItems?.id);\n  };\n\n  const searchListIconArray = [\n    {\n      count: addComma(searchItems?.forks_count as number),\n      icon: StarOutlined,\n      key: 'fork'\n    },\n    {\n      count: addComma(searchItems?.watchers as number),\n      icon: EyeOutlined,\n      key: 'watcher'\n    }\n  ];\n\n  const reactionsArray = [\n    {\n      count: addComma(issueItems?.reactions?.confused as number),\n      icon: '😕',\n      key: 'confused'\n    },\n    {\n      count: addComma(issueItems?.reactions?.eyes as number),\n      icon: '👀',\n      key: 'eyes'\n    },\n    {\n      count: addComma(issueItems?.reactions?.heart as number),\n      icon: '❤',\n      key: 'heart'\n    },\n    {\n      count: addComma(issueItems?.reactions?.hooray as number),\n      icon: '🎉',\n      key: 'hooray'\n    },\n    {\n      count: addComma(issueItems?.reactions?.laugh as number),\n      icon: '🤣',\n      key: 'laugh'\n    },\n    {\n      count: addComma(issueItems?.reactions?.rocket as number),\n      icon: '🚀',\n      key: 'rocket'\n    }\n  ];\n\n  return (\n    <StyledListItem\n      actions={\n        searchItems\n          ? searchListIconArray.map(searchIcon => {\n              return (\n                <IconText\n                  key={searchIcon.key}\n                  icon={searchIcon.icon}\n                  text={searchIcon.count}\n                />\n              );\n            })\n          : issueItems\n          ? reactionsArray.map(reactionIcon => {\n              return (\n                <IconText\n                  key={reactionIcon.key}\n                  stringIcon={reactionIcon.icon}\n                  text={reactionIcon.count}\n                />\n              );\n            })\n          : ['']\n      }\n    >\n      <List.Item.Meta\n        avatar={\n          <Avatar\n            src={searchItems?.owner?.avatar_url || issueItems?.user.avatar_url}\n          />\n        }\n        title={\n          <a\n            href={searchItems?.html_url || issueItems?.html_url}\n            className=\"list-title\"\n          >\n            {searchItems?.full_name || issueItems?.title}\n          </a>\n        }\n        description={searchItems?.description || issueItems?.body}\n      />\n\n      {searchItems && (\n        <>\n          {searchItems?.topics?.map(topic => (\n            <Tag key={topic} color=\"success\" className=\"tags\">\n              {topic}\n            </Tag>\n          ))}\n          <p className=\"issue\">\n            총 {addComma(searchItems?.open_issues_count as number)}개의 이슈가\n            있습니다.\n          </p>\n          <div className=\"footer-container\">\n            <p className=\"updated\">\n              Updated{' '}\n              {timeStamp(\n                (searchItems?.pushed_at as string) ||\n                  (issueItems?.updated_at as string)\n              )}\n            </p>\n            <button\n              className=\"add-button\"\n              onClick={() =>\n                checkBookMark()\n                  ? handleRemoveBookMark &&\n                    handleRemoveBookMark(searchItems?.id as number)\n                  : handleAddBookMark &&\n                    handleAddBookMark({\n                      repo: searchItems?.name as string,\n                      open_issues_count:\n                        searchItems?.open_issues_count as number,\n                      id: searchItems?.id as number,\n                      owner: searchItems?.owner.login as string,\n                      full_name: searchItems?.full_name as string\n                    })\n              }\n            >\n              <HeartFilled className={checkBookMark() ? 'active' : ''} /> 북마크\n              {checkBookMark() && ' 해제'}\n            </button>\n          </div>\n        </>\n      )}\n\n      {issueItems && (\n        <div className=\"footer-container\">\n          <Tag key=\"repo\" color=\"success\" className=\"tags\">\n            {filterRepo(issueItems?.repository_url)}\n          </Tag>\n          <p className=\"updated\">Updated {timeStamp(issueItems?.updated_at)}</p>\n        </div>\n      )}\n    </StyledListItem>\n  );\n};\n\nexport default ListItem;\n","import React from 'react';\n\nimport { PageHeader } from 'antd';\nimport styled from 'styled-components';\nimport { HomeOutlined } from '@ant-design/icons';\n\nimport { navTitle } from 'libs';\n\ninterface HeaderProps {\n  handleMoveBack: () => void;\n  handleMoveHome: () => void;\n  pathName: string;\n  isMain?: boolean;\n}\n\ninterface StyledPageHeaderProps {\n  isMain?: boolean;\n}\nconst StyledPageHeader = styled(PageHeader)<StyledPageHeaderProps>`\n  position: sticky;\n  top: 0;\n  left: 0;\n  right: 0;\n\n  .menu-button {\n    all: unset;\n    cursor: pointer;\n  }\n\n  .menu-icon,\n  .anticon.anticon-arrow-left,\n  .ant-page-header-heading-title {\n    font-size: 30px;\n  }\n  .ant-page-header-back-button {\n    display: ${props => (props.isMain ? 'none' : 'block')} !important;\n  }\n`;\n\nconst Header = (props: HeaderProps) => {\n  const { handleMoveBack, handleMoveHome, pathName, isMain } = props;\n\n  return (\n    <StyledPageHeader\n      onBack={handleMoveBack}\n      isMain={isMain}\n      title={isMain ? '' : navTitle[pathName]}\n      extra={[\n        <button key=\"menu\" className=\"menu-button\" onClick={handleMoveHome}>\n          <HomeOutlined className=\"menu-icon\" />\n        </button>\n      ]}\n    ></StyledPageHeader>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Layout } from 'antd';\nimport styled from 'styled-components';\n\nimport Header from 'components/Header';\nimport { ROUTE_ROOT } from 'routes/const';\n\ninterface MainLayoutProps extends React.HTMLProps<HTMLDivElement> {\n  isMain?: boolean;\n}\n\nconst StyledMainLayout = styled.div`\n  position: relative;\n\n  .ant-page-header-content {\n    padding: 0;\n  }\n`;\n\nconst MainLayout = ({ children, ...props }: MainLayoutProps) => {\n  const { isMain } = props;\n  const history = useHistory();\n  const pathName = history.location.pathname.split('/')[1];\n\n  const handleMoveBack = () => {\n    history.goBack();\n  };\n\n  const handleMoveHome = () => {\n    history.push(ROUTE_ROOT);\n  };\n\n  return (\n    <StyledMainLayout>\n      <Header\n        isMain={isMain}\n        handleMoveBack={handleMoveBack}\n        handleMoveHome={handleMoveHome}\n        pathName={pathName}\n      ></Header>\n      <Layout.Content>{children}</Layout.Content>\n    </StyledMainLayout>\n  );\n};\n\nexport default MainLayout;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport { Divider, Empty, Skeleton, List } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { StoreState } from 'module/index';\nimport {\n  addBookMarkAction,\n  getRepositoryAction,\n  handleAddBookMarkProps,\n  removeBookMarkAction,\n  searchItem,\n  setLoadingAction\n} from 'module/github';\nimport ListItem from 'components/Item/ListItem';\nimport { addComma, DEFAULT_PAGE, DEFAULT_PERPAGE } from 'libs/constants';\n\nconst StyledSearch = styled.div`\n  header.search {\n    padding: 40px 40px 0 40px;\n    font-family: GmarketSansLight;\n    font-size: 26px;\n    margin-bottom: 40px;\n  }\n  .total-count {\n    padding: 0 5px;\n    font-family: GmarketSansMedium;\n    font-size: 28px;\n    color: ${props => props.theme.mainColor};\n  }\n`;\n\nconst Search = () => {\n  const { repositoryList, bookMarkList, isLoading } = useSelector(\n    (state: StoreState) => state.githubState\n  );\n  const [currentPage, setCurrentPage] = useState<number>(DEFAULT_PAGE);\n  const totalPage = Math.ceil(\n    (repositoryList?.data?.total_count as number) / DEFAULT_PERPAGE\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const keyword = history.location.pathname.split('q=')[1];\n\n  const handleAddBookMark = useCallback(\n    ({\n      id,\n      owner,\n      repo,\n      open_issues_count,\n      full_name\n    }: handleAddBookMarkProps) => {\n      dispatch(\n        addBookMarkAction.request({\n          id,\n          owner,\n          repo,\n          open_issues_count,\n          full_name\n        })\n      );\n    },\n    [bookMarkList]\n  );\n\n  const handleRemoveBookMark = useCallback(\n    (id: number) => {\n      dispatch(\n        removeBookMarkAction.request({\n          id\n        })\n      );\n    },\n    [bookMarkList]\n  );\n\n  const handleLoadMoreData = () => {\n    if (isLoading) return;\n    if (Math.ceil(totalPage) < currentPage) return;\n\n    setCurrentPage(prev => prev + 1);\n  };\n\n  useEffect(() => {\n    if (!repositoryList) {\n      dispatch(\n        getRepositoryAction.request({\n          q: keyword,\n          per_page: DEFAULT_PERPAGE,\n          page: DEFAULT_PAGE\n        })\n      );\n    }\n    if (currentPage !== 1) {\n      dispatch(setLoadingAction());\n      dispatch(\n        getRepositoryAction.request({\n          q: keyword,\n          per_page: DEFAULT_PERPAGE,\n          page: currentPage\n        })\n      );\n    }\n  }, [currentPage]);\n\n  return (\n    <StyledSearch>\n      <header className=\"search\">\n        총\n        <strong className=\"total-count\">\n          {addComma(repositoryList?.data.total_count as number) || 0}\n        </strong>\n        건이 검색 되었습니다.\n      </header>\n      {!repositoryList?.data.total_count ? (\n        <Empty\n          className=\"empty\"\n          description={\n            <div>\n              <p className=\"empty-description\">검색결과가 존재하지 않습니다.</p>\n              <p className=\"empty-description\">다른 검색어를 입력해보세요.</p>\n            </div>\n          }\n          imageStyle={{ height: '100%' }}\n        />\n      ) : (\n        <div\n          id=\"scrollableDiv\"\n          style={{\n            height: 'calc(100vh - 300px)',\n            overflow: 'auto',\n            padding: '0 16px'\n          }}\n        >\n          <InfiniteScroll\n            dataLength={repositoryList?.data.items.length}\n            next={handleLoadMoreData}\n            hasMore={\n              repositoryList?.data.items.length <\n              repositoryList?.data?.total_count\n            }\n            loader={<Skeleton avatar paragraph={{ rows: 1 }} active />}\n            endMessage={<Divider plain>마지막 게시물입니다.</Divider>}\n            scrollableTarget=\"scrollableDiv\"\n          >\n            <List\n              dataSource={repositoryList?.data?.items}\n              itemLayout=\"vertical\"\n              renderItem={item => (\n                <ListItem\n                  searchItems={item as unknown as searchItem}\n                  bookMarkList={bookMarkList}\n                  handleAddBookMark={handleAddBookMark}\n                  handleRemoveBookMark={handleRemoveBookMark}\n                />\n              )}\n            />\n          </InfiniteScroll>\n        </div>\n      )}\n    </StyledSearch>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport Search from 'container/Search';\nimport MainLayout from 'layouts/MainLayout';\n\nconst SearchPage = () => {\n  return (\n    <MainLayout>\n      <Search />\n    </MainLayout>\n  );\n};\n\nexport default SearchPage;\n"],"sourceRoot":""}