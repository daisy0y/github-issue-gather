{"version":3,"sources":["pages/search/index.ts","pages/index.ts","routes/index.ts","components/NotFoundResult/index.tsx","App.tsx","module/index.ts","module/store.ts","index.tsx","routes/const.ts","module/github/actions/github.action.ts","module/github/apis/github.api.ts","module/github/reducers/github.reducers.ts","module/github/sagas/github.sagas.ts"],"names":["LazySearchPage","lazy","LazyHome","routes","public","path","paths","component","pages","NotFoundResult","history","useHistory","status","title","subTitle","extra","type","onClick","push","ROUTE_ROOT","App","useSelector","state","githubState","bookMarkList","recentlySearch","bookMark","localStorage","getItem","recently","dispatch","useDispatch","useEffect","getMyBookMarkAction","getRecentlySearchListAction","fallback","map","item","index","exact","saga","all","fork","githubSaga","reducer","combineReducers","router","connectRouter","githubReducer","sagaMiddleware","createSagaMiddleware","createBrowserHistory","store","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","run","ReactDOM","render","locale","ko_KR","theme","mainColor","document","getElementById","ROUTE_SEARCH","ROUTE_SEARCH_WITH_QUERY","query","getRepositoryAction","createAsyncAction","getIssueAction","removeBookMarkAction","addBookMarkAction","addRecentlySearchAction","removeRecentlySearchAction","resetBookMarkAction","createAction","setLoadingAction","resetRecentlySearchAction","resetIssueListAction","octokit","Octokit","auth","process","REACT_APP_GITHUB_AUTH","githubAPI","data","request","then","res","initialState","repositoryList","undefined","issueList","isLoading","createReducer","handleAction","success","action","produce","draft","checkFirst","payload","url","split","items","failure","alert","ls","JSON","parse","setItem","length","getRepositorySaga","getIssueSaga","addBookMarkSaga","removeBookMarkSaga","addRecentlySearchSaga","removeRecentlySearchSaga","call","put","q","Actions","list","default_page_num","default_page","i","open_issues_count","count","Math","ceil","delay","owner","repo","per_page","page","Error","stringify","sync","remove","filter","id","limited","find","full_name","shift","takeLatest"],"mappings":"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","file":"static/js/main.f15dd1b0.chunk.js","sourcesContent":["import { lazy } from 'react';\n\nexport const LazySearchPage = lazy(() => import('./SearchPage'));\n","import { lazy } from 'react';\n\nexport * from './search';\nexport const LazyHome = lazy(() => import('./Home'));\n","import * as paths from './const';\nimport * as pages from 'pages';\nexport * as paths from './const';\n\ninterface Routes {\n  public: RoutesOption[];\n}\n\ninterface RoutesOption {\n  path: string;\n  component: React.FunctionComponent;\n}\n\nexport const routes: Routes = {\n  public: [\n    {\n      path: paths.ROUTE_ROOT,\n      component: pages.LazyHome\n    },\n    {\n      path: paths.ROUTE_SEARCH,\n      component: pages.LazySearchPage\n    }\n  ]\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button, Result } from 'antd';\n\nimport { ROUTE_ROOT } from 'routes/const';\n\nconst NotFoundResult = () => {\n  const history = useHistory();\n\n  const handleOnClickHomeMove = () => {\n    history.push(ROUTE_ROOT);\n  };\n  return (\n    <Result\n      status=\"404\"\n      title=\"404\"\n      subTitle=\"Sorry, the page you visited does not exist.\"\n      extra={\n        <Button type=\"primary\" onClick={handleOnClickHomeMove}>\n          Back Home\n        </Button>\n      }\n    />\n  );\n};\n\nexport default NotFoundResult;\n","import React, { Suspense, useEffect } from 'react';\n// import { Route, Router, Switch } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Spin } from 'antd';\n\nimport { routes } from 'routes';\nimport NotFoundResult from 'components/NotFoundResult';\nimport {\n  getMyBookMarkAction,\n  getRecentlySearchListAction\n} from 'module/github';\nimport { StoreState } from './module/index';\n\nconst App = () => {\n  const { bookMarkList, recentlySearch } = useSelector(\n    (state: StoreState) => state.githubState\n  );\n  const bookMark = localStorage.getItem('bookMark');\n  const recently = localStorage.getItem('recentlySearch');\n  const dispatch = useDispatch();\n\n  const getBookMarkList = () => {\n    if (bookMark && !bookMarkList) dispatch(getMyBookMarkAction());\n  };\n\n  const getRecentlySearchList = () => {\n    if (recently && !recentlySearch) dispatch(getRecentlySearchListAction());\n  };\n\n  useEffect(() => {\n    getBookMarkList();\n    getRecentlySearchList();\n  }, []);\n\n  return (\n    <Suspense fallback={<Spin />}>\n      <Switch>\n        {routes.public.map((item, index) => (\n          <Route\n            key={index}\n            path={item.path}\n            component={item.component}\n            exact\n          />\n        ))}\n        <Route path=\"*\" component={NotFoundResult} />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { connectRouter, RouterState } from 'connected-react-router';\nimport { History } from 'history';\nimport { all, fork } from 'redux-saga/effects';\nimport { GitbubState, githubReducer, githubSaga } from './github';\n\nexport interface StoreState {\n  router: RouterState;\n  githubState: GitbubState;\n}\n\nexport function* saga() {\n  yield all([fork(githubSaga)]);\n}\n\nconst reducer = (history: History) =>\n  combineReducers<StoreState>({\n    router: connectRouter(history),\n    githubState: githubReducer\n  });\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport reducer from './index';\n\nexport const sagaMiddleware = createSagaMiddleware();\nexport const history = createBrowserHistory();\n\nconst store = createStore(\n  reducer(history),\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware, routerMiddleware(history))\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport ko_KR from 'antd/es/locale/ko_KR';\nimport { ConfigProvider } from 'antd';\n\nimport App from './App';\nimport { saga } from './module';\nimport store, { history, sagaMiddleware } from './module/store';\nimport './index.less';\nimport { ThemeProvider } from 'styled-components';\n\nsagaMiddleware.run(saga);\n\nconst theme = {\n  mainColor: '#1DA57A'\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <ConfigProvider locale={ko_KR}>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </ConfigProvider>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","export const ROUTE_ROOT = '/github-issue-gather';\nexport const ROUTE_SEARCH = '/github-issue-gather/search/:query';\nexport const ROUTE_SEARCH_WITH_QUERY = (query: string) =>\n  `/github-issue-gather/search/q=${query}`;\n","import { RequestError } from '@octokit/types';\nimport { ActionType, createAction, createAsyncAction } from 'typesafe-actions';\nimport {\n  addRecentlySearch,\n  bookMarkList,\n  // listIssueParameters,\n  listIssueReposResponse,\n  listUserReposParameters,\n  listUserReposResponse\n} from '../models/github.models';\n\nconst GET_REPOSITORY_LIST_REQUEST = 'github/GET_REPOSITORY_LIST_REQUEST';\nconst GET_REPOSITORY_LIST_SUCCESS = 'github/GET_REPOSITORY_LIST_SUCCESS';\nconst GET_REPOSITORY_LIST_FAILURE = 'github/GET_REPOSITORY_LIST_FAILURE';\n\nconst GET_ISSUE_LIST_REQUEST = 'github/GET_ISSUE_LIST_REQUEST';\nconst GET_ISSUE_LIST_SUCCESS = 'github/GET_ISSUE_LIST_SUCCESS';\nconst GET_ISSUE_LIST_FAILURE = 'github/GET_ISSUE_LIST_FAILURE';\n\nconst ADD_BOOKMARK_REQUEST = 'github/ADD_BOOKMARK_REQUEST';\nconst ADD_BOOKMARK_SUCCESS = 'github/ADD_BOOKMARK_SUCCESS';\nconst ADD_BOOKMARK_FAILURE = 'github/ADD_BOOKMARK_FAILURE';\n\nconst REMOVE_BOOKMARK_REQUEST = 'github/REMOVE_BOOKMARK_REQUEST';\nconst REMOVE_BOOKMARK_SUCCESS = 'github/REMOVE_BOOKMARK_SUCCESS';\nconst REMOVE_BOOKMARK_FAILURE = 'github/REMOVE_BOOKMARK_FAILURE';\n\nconst ADD_RECENTLY_SEARCH_REQUEST = 'github/ADD_RECENTLY_SEARCH_REQUEST';\nconst ADD_RECENTLY_SEARCH_SUCCESS = 'github/ADD_RECENTLY_SEARCH_SUCCESS';\nconst ADD_RECENTLY_SEARCH_FAILURE = 'github/ADD_RECENTLY_SEARCH_FAILURE';\n\nconst REMOVE_RECENTLY_SEARCH_REQUEST = 'github/REMOVE_RECENTLY_SEARCH_REQUEST';\nconst REMOVE_RECENTLY_SEARCH_SUCCESS = 'github/REMOVE_RECENTLY_SEARCH_SUCCESS';\nconst REMOVE_RECENTLY_SEARCH_FAILURE = 'github/REMOVE_RECENTLY_SEARCH_FAILURE';\n\nconst RESET_BOOKMARK = 'github/RESET_BOOKMARK';\nconst GET_MY_BOOKMARK = 'github/GET_BOOKMARK';\nconst SET_LOADING = 'github/SET_LOADING';\nconst RESET_RECENTLY_SEARCH = 'github/RESET_RECENTLY_SEARCH';\nconst GET_RECENTLY_SEARCH_LIST = 'github/GET_RECENTLY_SEARCH_LIST';\nconst RESET_ISSUE_LIST = 'github/RESET_ISSUE_LIST';\n\nexport const getRepositoryAction = createAsyncAction(\n  GET_REPOSITORY_LIST_REQUEST,\n  GET_REPOSITORY_LIST_SUCCESS,\n  GET_REPOSITORY_LIST_FAILURE\n)<listUserReposParameters, listUserReposResponse, RequestError>();\n\nexport const getIssueAction = createAsyncAction(\n  GET_ISSUE_LIST_REQUEST,\n  GET_ISSUE_LIST_SUCCESS,\n  GET_ISSUE_LIST_FAILURE\n)<unknown, listIssueReposResponse['data'][], RequestError>();\n\nexport const removeBookMarkAction = createAsyncAction(\n  REMOVE_BOOKMARK_REQUEST,\n  REMOVE_BOOKMARK_SUCCESS,\n  REMOVE_BOOKMARK_FAILURE\n)<{ id: number }, bookMarkList[], unknown>();\n\nexport const addBookMarkAction = createAsyncAction(\n  ADD_BOOKMARK_REQUEST,\n  ADD_BOOKMARK_SUCCESS,\n  ADD_BOOKMARK_FAILURE\n)<bookMarkList, bookMarkList[], unknown>();\n\nexport const addRecentlySearchAction = createAsyncAction(\n  ADD_RECENTLY_SEARCH_REQUEST,\n  ADD_RECENTLY_SEARCH_SUCCESS,\n  ADD_RECENTLY_SEARCH_FAILURE\n)<addRecentlySearch, addRecentlySearch[], unknown>();\n\nexport const removeRecentlySearchAction = createAsyncAction(\n  REMOVE_RECENTLY_SEARCH_REQUEST,\n  REMOVE_RECENTLY_SEARCH_SUCCESS,\n  REMOVE_RECENTLY_SEARCH_FAILURE\n)<{ id: string }, addRecentlySearch[], unknown>();\n\nexport const resetBookMarkAction = createAction(RESET_BOOKMARK)();\nexport const getMyBookMarkAction = createAction(GET_MY_BOOKMARK)();\nexport const setLoadingAction = createAction(SET_LOADING)();\nexport const resetRecentlySearchAction = createAction(RESET_RECENTLY_SEARCH)();\nexport const resetIssueListAction = createAction(RESET_ISSUE_LIST)();\nexport const getRecentlySearchListAction = createAction(\n  GET_RECENTLY_SEARCH_LIST\n)();\n\nconst actions = {\n  getRepositoryAction,\n  getIssueAction,\n  addBookMarkAction,\n  removeBookMarkAction,\n  resetBookMarkAction,\n  getMyBookMarkAction,\n  setLoadingAction,\n  resetRecentlySearchAction,\n  getRecentlySearchListAction,\n  addRecentlySearchAction,\n  removeRecentlySearchAction,\n  resetIssueListAction\n};\n\nexport type GihubAction = ActionType<typeof actions>;\n","import { Octokit } from '@octokit/core';\n\nimport {\n  listIssueParameters,\n  listUserReposParameters\n} from '../models/github.models';\n\nconst octokit = new Octokit({\n  auth: process.env.REACT_APP_GITHUB_AUTH\n});\n\nexport const githubAPI = {\n  getRepositoryList: (data: listUserReposParameters) =>\n    octokit.request('GET /search/repositories', data).then(res => res),\n  getIssueList: (data: listIssueParameters) =>\n    octokit\n      .request('GET /repos/{owner}/{repo}/issues', data)\n      .then(res => res.data)\n};\n","import produce from 'immer';\n\nimport { createReducer } from 'typesafe-actions';\nimport {\n  addRecentlySearch,\n  bookMarkList,\n  listIssueReposResponse,\n  listUserReposResponse\n} from '..';\n\nimport {\n  addBookMarkAction,\n  addRecentlySearchAction,\n  getIssueAction,\n  getMyBookMarkAction,\n  getRecentlySearchListAction,\n  getRepositoryAction,\n  GihubAction,\n  removeBookMarkAction,\n  removeRecentlySearchAction,\n  resetBookMarkAction,\n  resetIssueListAction,\n  resetRecentlySearchAction,\n  setLoadingAction\n} from '../actions/github.action';\n\nexport interface GitbubState {\n  repositoryList?: listUserReposResponse;\n  issueList?: listIssueReposResponse['data'][];\n  bookMarkList?: bookMarkList[];\n  isLoading: boolean;\n  recentlySearch?: addRecentlySearch[];\n}\n\nconst initialState = {\n  repositoryList: undefined,\n  bookMarkList: undefined,\n  issueList: undefined,\n  isLoading: false,\n  recentlySearch: undefined\n};\n\nexport const githubReducer = createReducer<GitbubState, GihubAction>(\n  initialState\n)\n  .handleAction(getRepositoryAction.success, (state, action) =>\n    produce(state, draft => {\n      const checkFirst = action.payload.url.split('&page=')[1];\n\n      if (!state.repositoryList || checkFirst === '1') {\n        draft.repositoryList = { ...action.payload };\n      } else {\n        if (draft.repositoryList) {\n          draft.repositoryList['data']['items'] = [\n            ...state.repositoryList.data.items,\n            ...action.payload.data.items\n          ];\n          draft.repositoryList['url'] = action.payload.url;\n        }\n      }\n      draft.isLoading = false;\n    })\n  )\n  .handleAction(getRepositoryAction.failure, state =>\n    produce(state, draft => {\n      alert('에러가 발생했습니다.\\n새로 고침 후 다시 시도해주세요.');\n      draft.isLoading = false;\n    })\n  )\n  .handleAction(getIssueAction.success, (state, action) =>\n    produce(state, draft => {\n      draft.issueList = action.payload;\n      draft.isLoading = false;\n    })\n  )\n  .handleAction(getIssueAction.failure, state =>\n    produce(state, draft => {\n      alert('에러가 발생했습니다.\\n새로 고침 후 다시 시도해주세요.');\n      draft.isLoading = false;\n    })\n  )\n  .handleAction(getMyBookMarkAction, state =>\n    produce(state, draft => {\n      const ls = localStorage.getItem('bookMark');\n      if (ls) draft.bookMarkList = JSON.parse(ls);\n    })\n  )\n  .handleAction(resetBookMarkAction, state =>\n    produce(state, draft => {\n      draft.bookMarkList = undefined;\n      draft.issueList = undefined;\n      localStorage.setItem('bookMark', '');\n      alert('북마크가 모두 삭제 되었습니다.');\n    })\n  )\n  .handleAction(resetIssueListAction, state =>\n    produce(state, draft => {\n      draft.issueList = undefined;\n    })\n  )\n  .handleAction(setLoadingAction, state =>\n    produce(state, draft => {\n      draft.isLoading = true;\n    })\n  )\n  .handleAction(addBookMarkAction.success, (state, action) =>\n    produce(state, draft => {\n      const payload = action.payload;\n\n      draft.bookMarkList = payload;\n      alert(\n        `북마크에 추가 되었습니다.\\n현재 ${payload.length}개의 저장소가 북마크 되어있습니다.`\n      );\n    })\n  )\n  .handleAction(removeBookMarkAction.success, (state, action) =>\n    produce(state, draft => {\n      const payload = action.payload;\n      draft.issueList = undefined;\n      draft.bookMarkList = payload;\n      alert(\n        `북마크가 제거 되었습니다.\\n현재 ${payload.length}개의 저장소가 북마크 되어있습니다.`\n      );\n    })\n  )\n  .handleAction(addRecentlySearchAction.success, (state, action) =>\n    produce(state, draft => {\n      const payload = action.payload;\n      draft.recentlySearch = payload;\n    })\n  )\n  .handleAction(removeRecentlySearchAction.success, (state, action) =>\n    produce(state, draft => {\n      const payload = action.payload;\n      draft.recentlySearch = payload;\n    })\n  )\n  .handleAction(resetRecentlySearchAction, state =>\n    produce(state, draft => {\n      draft.recentlySearch = undefined;\n      localStorage.setItem('recentlySearch', '');\n      alert('모든 최근 검색어가 제거 되었습니다.');\n    })\n  )\n  .handleAction(getRecentlySearchListAction, state =>\n    produce(state, draft => {\n      const ls = localStorage.getItem('recentlySearch');\n      if (ls) draft.recentlySearch = JSON.parse(ls);\n    })\n  );\n","import { RequestError } from '@octokit/types';\nimport { call, delay, put, takeLatest } from 'redux-saga/effects';\n\nimport { ActionType } from 'typesafe-actions';\nimport {\n  addRecentlySearch,\n  bookMarkList,\n  listIssueReposResponse,\n  listUserReposResponse\n} from '..';\n\nimport * as Actions from '../actions/github.action';\n\nimport { githubAPI } from '../apis/github.api';\n\nimport { push } from 'connected-react-router';\nimport { ROUTE_SEARCH_WITH_QUERY } from 'routes/const';\n\nfunction* getRepositorySaga(\n  action: ActionType<typeof Actions.getRepositoryAction.request>\n) {\n  try {\n    const payload = action.payload;\n    const data: listUserReposResponse = yield call(\n      githubAPI.getRepositoryList,\n      payload\n    );\n    const checkFirst = data.url.split('&page=')[1];\n    if (checkFirst === '1') {\n      yield put(push(ROUTE_SEARCH_WITH_QUERY(payload.q)));\n    }\n\n    yield put(Actions.getRepositoryAction.success({ ...data }));\n  } catch (error) {\n    yield put(Actions.getRepositoryAction.failure(error as RequestError));\n  }\n}\nfunction* getIssueSaga(\n  action: ActionType<typeof Actions.getIssueAction.request>\n) {\n  try {\n    const payload = action.payload;\n\n    const list: listIssueReposResponse['data'][] = [];\n    const default_page_num = 100;\n    const default_page = 1;\n\n    for (let i = 0; i < payload.length; i++) {\n      if (payload[i].open_issues_count / default_page_num > default_page) {\n        const count = Math.ceil(\n          payload[i].open_issues_count / default_page_num\n        );\n\n        for (let q = 0; q < count; q++) {\n          yield delay(300);\n          const data: listIssueReposResponse['data'][] = yield call(\n            githubAPI.getIssueList,\n            {\n              owner: payload[i].owner,\n              repo: payload[i].repo,\n              per_page: default_page_num,\n              page: q + 1\n            }\n          );\n          list.push(...data);\n        }\n      } else {\n        const data: listIssueReposResponse['data'][] = yield call(\n          githubAPI.getIssueList,\n          {\n            owner: payload[i].owner,\n            repo: payload[i].repo,\n            per_page: default_page_num,\n            page: default_page\n          }\n        );\n\n        list.push(...data);\n      }\n    }\n\n    yield put(Actions.getIssueAction.success(list));\n  } catch (error) {\n    yield put(Actions.getIssueAction.failure(error as RequestError));\n  }\n}\n\nfunction* addBookMarkSaga(\n  action: ActionType<typeof Actions.addBookMarkAction.request>\n) {\n  try {\n    const payload = action.payload;\n    const ls = localStorage.getItem('bookMark');\n    const parse = ls && JSON.parse(ls);\n    const limited = 3;\n    if (parse) {\n      if (parse.length > limited) {\n        alert('최대 4개의 북마크를 저장할 수 있습니다.');\n        yield put(Actions.addBookMarkAction.failure(new Error('limited')));\n        return;\n      }\n      localStorage.setItem('bookMark', JSON.stringify([...parse, payload]));\n    } else {\n      localStorage.setItem('bookMark', JSON.stringify([payload]));\n    }\n\n    const sync = localStorage.getItem('bookMark');\n\n    yield put(Actions.addBookMarkAction.success(sync && JSON.parse(sync)));\n  } catch (error) {\n    yield put(Actions.addBookMarkAction.failure(error));\n  }\n}\nfunction* removeBookMarkSaga(\n  action: ActionType<typeof Actions.removeBookMarkAction.request>\n) {\n  try {\n    const payload = action.payload;\n    const ls = localStorage.getItem('bookMark');\n    const parse = ls && JSON.parse(ls);\n    const remove = parse.filter((item: bookMarkList) => item.id !== payload.id);\n\n    localStorage.setItem('bookMark', JSON.stringify(remove));\n\n    yield put(Actions.removeBookMarkAction.success(remove));\n  } catch (error) {\n    yield put(Actions.removeBookMarkAction.failure(error));\n  }\n}\n\nfunction* addRecentlySearchSaga(\n  action: ActionType<typeof Actions.addRecentlySearchAction.request>\n) {\n  try {\n    const payload = action.payload;\n    const ls = localStorage.getItem('recentlySearch');\n    const parse = ls && JSON.parse(ls);\n    const limited = 10;\n\n    if (parse) {\n      if (\n        parse.find(\n          (item: addRecentlySearch) => item.full_name === payload.full_name\n        )\n      )\n        return;\n\n      if (parse.length >= limited) {\n        const shift = [...parse];\n        shift.shift();\n        localStorage.setItem(\n          'recentlySearch',\n          JSON.stringify([...shift, payload])\n        );\n      } else {\n        localStorage.setItem(\n          'recentlySearch',\n          JSON.stringify([...parse, payload])\n        );\n      }\n    } else {\n      localStorage.setItem('recentlySearch', JSON.stringify([payload]));\n    }\n\n    const sync = localStorage.getItem('recentlySearch');\n    yield put(\n      Actions.addRecentlySearchAction.success(sync && JSON.parse(sync))\n    );\n  } catch (error) {\n    yield put(Actions.addRecentlySearchAction.failure(error));\n  }\n}\n\nfunction* removeRecentlySearchSaga(\n  action: ActionType<typeof Actions.removeRecentlySearchAction.request>\n) {\n  try {\n    const payload = action.payload;\n    const ls = localStorage.getItem('recentlySearch');\n    const parse = ls && JSON.parse(ls);\n    const remove = parse.filter(\n      (item: addRecentlySearch) => item.id !== payload.id\n    );\n\n    localStorage.setItem('recentlySearch', JSON.stringify(remove));\n\n    yield put(Actions.removeRecentlySearchAction.success(remove));\n  } catch (error) {\n    yield put(Actions.removeRecentlySearchAction.failure(error));\n  }\n}\n\nexport function* githubSaga() {\n  yield takeLatest(Actions.getRepositoryAction.request, getRepositorySaga);\n  yield takeLatest(Actions.getIssueAction.request, getIssueSaga);\n  yield takeLatest(Actions.addBookMarkAction.request, addBookMarkSaga);\n  yield takeLatest(Actions.removeBookMarkAction.request, removeBookMarkSaga);\n  yield takeLatest(\n    Actions.addRecentlySearchAction.request,\n    addRecentlySearchSaga\n  );\n  yield takeLatest(\n    Actions.removeRecentlySearchAction.request,\n    removeRecentlySearchSaga\n  );\n}\n"],"sourceRoot":""}